{"ast":null,"code":"/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n  static addClass(element, className) {\n    if (element && className) {\n      if (element.classList) element.classList.add(className);else element.className += ' ' + className;\n    }\n  }\n\n  static addMultipleClasses(element, className) {\n    if (element && className) {\n      if (element.classList) {\n        let styles = className.trim().split(' ');\n\n        for (let i = 0; i < styles.length; i++) {\n          element.classList.add(styles[i]);\n        }\n      } else {\n        let styles = className.split(' ');\n\n        for (let i = 0; i < styles.length; i++) {\n          element.className += ' ' + styles[i];\n        }\n      }\n    }\n  }\n\n  static removeClass(element, className) {\n    if (element && className) {\n      if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  }\n\n  static hasClass(element, className) {\n    if (element && className) {\n      if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n\n    return false;\n  }\n\n  static siblings(element) {\n    return Array.prototype.filter.call(element.parentNode.children, function (child) {\n      return child !== element;\n    });\n  }\n\n  static find(element, selector) {\n    return Array.from(element.querySelectorAll(selector));\n  }\n\n  static findSingle(element, selector) {\n    if (element) {\n      return element.querySelector(selector);\n    }\n\n    return null;\n  }\n\n  static index(element) {\n    let children = element.parentNode.childNodes;\n    let num = 0;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].nodeType == 1) num++;\n    }\n\n    return -1;\n  }\n\n  static indexWithinGroup(element, attributeName) {\n    let children = element.parentNode ? element.parentNode.childNodes : [];\n    let num = 0;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;\n    }\n\n    return -1;\n  }\n\n  static appendOverlay(overlay, target, appendTo = 'self') {\n    if (appendTo !== 'self' && overlay && target) {\n      this.appendChild(overlay, target);\n    }\n  }\n\n  static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n    if (overlay && target) {\n      calculateMinWidth && (overlay.style.minWidth || (overlay.style.minWidth = DomHandler.getOuterWidth(target) + 'px'));\n\n      if (appendTo === 'self') {\n        this.relativePosition(overlay, target);\n      } else {\n        this.absolutePosition(overlay, target);\n      }\n    }\n  }\n\n  static relativePosition(element, target) {\n    const getClosestRelativeElement = el => {\n      if (!el) return;\n      return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n    };\n\n    const elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    const targetHeight = target.offsetHeight;\n    const targetOffset = target.getBoundingClientRect();\n    const windowScrollTop = this.getWindowScrollTop();\n    const windowScrollLeft = this.getWindowScrollLeft();\n    const viewport = this.getViewport();\n    const relativeElement = getClosestRelativeElement(element);\n    const relativeElementOffset = relativeElement?.getBoundingClientRect() || {\n      top: -1 * windowScrollTop,\n      left: -1 * windowScrollLeft\n    };\n    let top, left;\n\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n      top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n      element.style.transformOrigin = 'bottom';\n\n      if (targetOffset.top + top < 0) {\n        top = -1 * targetOffset.top;\n      }\n    } else {\n      top = targetHeight + targetOffset.top - relativeElementOffset.top;\n      element.style.transformOrigin = 'top';\n    }\n\n    if (elementDimensions.width > viewport.width) {\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\n      left = (targetOffset.left - relativeElementOffset.left) * -1;\n    } else if (targetOffset.left - relativeElementOffset.left + elementDimensions.width > viewport.width) {\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\n      left = (targetOffset.left - relativeElementOffset.left + elementDimensions.width - viewport.width) * -1;\n    } else {\n      // element fits on screen (align with target)\n      left = targetOffset.left - relativeElementOffset.left;\n    }\n\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n\n  static absolutePosition(element, target) {\n    const elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    const elementOuterHeight = elementDimensions.height;\n    const elementOuterWidth = elementDimensions.width;\n    const targetOuterHeight = target.offsetHeight;\n    const targetOuterWidth = target.offsetWidth;\n    const targetOffset = target.getBoundingClientRect();\n    const windowScrollTop = this.getWindowScrollTop();\n    const windowScrollLeft = this.getWindowScrollLeft();\n    const viewport = this.getViewport();\n    let top, left;\n\n    if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n      top = targetOffset.top + windowScrollTop - elementOuterHeight;\n      element.style.transformOrigin = 'bottom';\n\n      if (top < 0) {\n        top = windowScrollTop;\n      }\n    } else {\n      top = targetOuterHeight + targetOffset.top + windowScrollTop;\n      element.style.transformOrigin = 'top';\n    }\n\n    if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n\n  static getParents(element, parents = []) {\n    return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n  }\n\n  static getScrollableParents(element) {\n    let scrollableParents = [];\n\n    if (element) {\n      let parents = this.getParents(element);\n      const overflowRegex = /(auto|scroll)/;\n\n      const overflowCheck = node => {\n        let styleDeclaration = window['getComputedStyle'](node, null);\n        return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n      };\n\n      for (let parent of parents) {\n        let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n\n        if (scrollSelectors) {\n          let selectors = scrollSelectors.split(',');\n\n          for (let selector of selectors) {\n            let el = this.findSingle(parent, selector);\n\n            if (el && overflowCheck(el)) {\n              scrollableParents.push(el);\n            }\n          }\n        }\n\n        if (parent.nodeType !== 9 && overflowCheck(parent)) {\n          scrollableParents.push(parent);\n        }\n      }\n    }\n\n    return scrollableParents;\n  }\n\n  static getHiddenElementOuterHeight(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementHeight = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementHeight;\n  }\n\n  static getHiddenElementOuterWidth(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementWidth = element.offsetWidth;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementWidth;\n  }\n\n  static getHiddenElementDimensions(element) {\n    let dimensions = {};\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return dimensions;\n  }\n\n  static scrollInView(container, item) {\n    let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n    let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n    let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    let scroll = container.scrollTop;\n    let elementHeight = container.clientHeight;\n    let itemHeight = this.getOuterHeight(item);\n\n    if (offset < 0) {\n      container.scrollTop = scroll + offset;\n    } else if (offset + itemHeight > elementHeight) {\n      container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n  }\n\n  static fadeIn(element, duration) {\n    element.style.opacity = 0;\n    let last = +new Date();\n    let opacity = 0;\n\n    let tick = function () {\n      opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n      element.style.opacity = opacity;\n      last = +new Date();\n\n      if (+opacity < 1) {\n        window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n      }\n    };\n\n    tick();\n  }\n\n  static fadeOut(element, ms) {\n    var opacity = 1,\n        interval = 50,\n        duration = ms,\n        gap = interval / duration;\n    let fading = setInterval(() => {\n      opacity = opacity - gap;\n\n      if (opacity <= 0) {\n        opacity = 0;\n        clearInterval(fading);\n      }\n\n      element.style.opacity = opacity;\n    }, interval);\n  }\n\n  static getWindowScrollTop() {\n    let doc = document.documentElement;\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  }\n\n  static getWindowScrollLeft() {\n    let doc = document.documentElement;\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  }\n\n  static matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n      return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n\n  static getOuterWidth(el, margin) {\n    let width = el.offsetWidth;\n\n    if (margin) {\n      let style = getComputedStyle(el);\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n\n    return width;\n  }\n\n  static getHorizontalPadding(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n  }\n\n  static getHorizontalMargin(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n  }\n\n  static innerWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n\n  static width(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n\n  static getInnerHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    return height;\n  }\n\n  static getOuterHeight(el, margin) {\n    let height = el.offsetHeight;\n\n    if (margin) {\n      let style = getComputedStyle(el);\n      height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    }\n\n    return height;\n  }\n\n  static getHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n    return height;\n  }\n\n  static getWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n    return width;\n  }\n\n  static getViewport() {\n    let win = window,\n        d = document,\n        e = d.documentElement,\n        g = d.getElementsByTagName('body')[0],\n        w = win.innerWidth || e.clientWidth || g.clientWidth,\n        h = win.innerHeight || e.clientHeight || g.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  }\n\n  static getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n      left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n    };\n  }\n\n  static replaceElementWith(element, replacementElement) {\n    let parentNode = element.parentNode;\n    if (!parentNode) throw `Can't replace element`;\n    return parentNode.replaceChild(replacementElement, element);\n  }\n\n  static getUserAgent() {\n    return navigator.userAgent;\n  }\n\n  static isIE() {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf('MSIE ');\n\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return true;\n    }\n\n    var trident = ua.indexOf('Trident/');\n\n    if (trident > 0) {\n      // IE 11 => return version number\n      var rv = ua.indexOf('rv:');\n      return true;\n    }\n\n    var edge = ua.indexOf('Edge/');\n\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return true;\n    } // other browser\n\n\n    return false;\n  }\n\n  static isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n  }\n\n  static isAndroid() {\n    return /(android)/i.test(navigator.userAgent);\n  }\n\n  static isTouchDevice() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  static appendChild(element, target) {\n    if (this.isElement(target)) target.appendChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw 'Cannot append ' + target + ' to ' + element;\n  }\n\n  static removeChild(element, target) {\n    if (this.isElement(target)) target.removeChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.removeChild(element);else throw 'Cannot remove ' + element + ' from ' + target;\n  }\n\n  static removeElement(element) {\n    if (!('remove' in Element.prototype)) element.parentNode.removeChild(element);else element.remove();\n  }\n\n  static isElement(obj) {\n    return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n  }\n\n  static calculateScrollbarWidth(el) {\n    if (el) {\n      let style = getComputedStyle(el);\n      return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n    } else {\n      if (this.calculatedScrollbarWidth !== null) return this.calculatedScrollbarWidth;\n      let scrollDiv = document.createElement('div');\n      scrollDiv.className = 'p-scrollbar-measure';\n      document.body.appendChild(scrollDiv);\n      let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      this.calculatedScrollbarWidth = scrollbarWidth;\n      return scrollbarWidth;\n    }\n  }\n\n  static calculateScrollbarHeight() {\n    if (this.calculatedScrollbarHeight !== null) return this.calculatedScrollbarHeight;\n    let scrollDiv = document.createElement('div');\n    scrollDiv.className = 'p-scrollbar-measure';\n    document.body.appendChild(scrollDiv);\n    let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n    document.body.removeChild(scrollDiv);\n    this.calculatedScrollbarWidth = scrollbarHeight;\n    return scrollbarHeight;\n  }\n\n  static invokeElementMethod(element, methodName, args) {\n    element[methodName].apply(element, args);\n  }\n\n  static clearSelection() {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document['selection'] && document['selection'].empty) {\n      try {\n        document['selection'].empty();\n      } catch (error) {//ignore IE bug\n      }\n    }\n  }\n\n  static getBrowser() {\n    if (!this.browser) {\n      let matched = this.resolveUserAgent();\n      this.browser = {};\n\n      if (matched.browser) {\n        this.browser[matched.browser] = true;\n        this.browser['version'] = matched.version;\n      }\n\n      if (this.browser['chrome']) {\n        this.browser['webkit'] = true;\n      } else if (this.browser['webkit']) {\n        this.browser['safari'] = true;\n      }\n    }\n\n    return this.browser;\n  }\n\n  static resolveUserAgent() {\n    let ua = navigator.userAgent.toLowerCase();\n    let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n    return {\n      browser: match[1] || '',\n      version: match[2] || '0'\n    };\n  }\n\n  static isInteger(value) {\n    if (Number.isInteger) {\n      return Number.isInteger(value);\n    } else {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    }\n  }\n\n  static isHidden(element) {\n    return !element || element.offsetParent === null;\n  }\n\n  static isVisible(element) {\n    return element && element.offsetParent != null;\n  }\n\n  static isExist(element) {\n    return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n  }\n\n  static focus(element, options) {\n    element && document.activeElement !== element && element.focus(options);\n  }\n\n  static getFocusableElements(element) {\n    let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]):not(.p-disabled)`);\n    let visibleFocusableElements = [];\n\n    for (let focusableElement of focusableElements) {\n      if (getComputedStyle(focusableElement).display != 'none' && getComputedStyle(focusableElement).visibility != 'hidden') visibleFocusableElements.push(focusableElement);\n    }\n\n    return visibleFocusableElements;\n  }\n\n  static generateZIndex() {\n    this.zindex = this.zindex || 999;\n    return ++this.zindex;\n  }\n\n  static getSelection() {\n    if (window.getSelection) return window.getSelection().toString();else if (document.getSelection) return document.getSelection().toString();else if (document['selection']) return document['selection'].createRange().text;\n    return null;\n  }\n\n  static getTargetElement(target, el) {\n    if (!target) return null;\n\n    switch (target) {\n      case 'document':\n        return document;\n\n      case 'window':\n        return window;\n\n      case '@next':\n        return el?.nextElementSibling;\n\n      case '@prev':\n        return el?.previousElementSibling;\n\n      case '@parent':\n        return el?.parentElement;\n\n      case '@grandparent':\n        return el?.parentElement.parentElement;\n\n      default:\n        const type = typeof target;\n\n        if (type === 'string') {\n          return document.querySelector(target);\n        } else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n          return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n        }\n\n        const isFunction = obj => !!(obj && obj.constructor && obj.call && obj.apply);\n\n        const element = isFunction(target) ? target() : target;\n        return element && element.nodeType === 9 || this.isExist(element) ? element : null;\n    }\n  }\n\n}\n\nDomHandler.zindex = 1000;\nDomHandler.calculatedScrollbarWidth = null;\nDomHandler.calculatedScrollbarHeight = null;\n\nclass ConnectedOverlayScrollHandler {\n  constructor(element, listener = () => {}) {\n    this.element = element;\n    this.listener = listener;\n  }\n\n  bindScrollListener() {\n    this.scrollableParents = DomHandler.getScrollableParents(this.element);\n\n    for (let i = 0; i < this.scrollableParents.length; i++) {\n      this.scrollableParents[i].addEventListener('scroll', this.listener);\n    }\n  }\n\n  unbindScrollListener() {\n    if (this.scrollableParents) {\n      for (let i = 0; i < this.scrollableParents.length; i++) {\n        this.scrollableParents[i].removeEventListener('scroll', this.listener);\n      }\n    }\n  }\n\n  destroy() {\n    this.unbindScrollListener();\n    this.element = null;\n    this.listener = null;\n    this.scrollableParents = null;\n  }\n\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ConnectedOverlayScrollHandler, DomHandler };","map":{"version":3,"names":["DomHandler","addClass","element","className","classList","add","addMultipleClasses","styles","trim","split","i","length","removeClass","remove","replace","RegExp","join","hasClass","contains","test","siblings","Array","prototype","filter","call","parentNode","children","child","find","selector","from","querySelectorAll","findSingle","querySelector","index","childNodes","num","nodeType","indexWithinGroup","attributeName","attributes","appendOverlay","overlay","target","appendTo","appendChild","alignOverlay","calculateMinWidth","style","minWidth","getOuterWidth","relativePosition","absolutePosition","getClosestRelativeElement","el","getComputedStyle","getPropertyValue","parentElement","elementDimensions","offsetParent","width","offsetWidth","height","offsetHeight","getHiddenElementDimensions","targetHeight","targetOffset","getBoundingClientRect","windowScrollTop","getWindowScrollTop","windowScrollLeft","getWindowScrollLeft","viewport","getViewport","relativeElement","relativeElementOffset","top","left","transformOrigin","elementOuterHeight","elementOuterWidth","targetOuterHeight","targetOuterWidth","Math","max","getParents","parents","concat","getScrollableParents","scrollableParents","overflowRegex","overflowCheck","node","styleDeclaration","window","parent","scrollSelectors","dataset","selectors","push","getHiddenElementOuterHeight","visibility","display","elementHeight","getHiddenElementOuterWidth","elementWidth","dimensions","scrollInView","container","item","borderTopValue","borderTop","parseFloat","paddingTopValue","paddingTop","containerRect","itemRect","offset","document","body","scrollTop","scroll","clientHeight","itemHeight","getOuterHeight","fadeIn","duration","opacity","last","Date","tick","getTime","requestAnimationFrame","setTimeout","fadeOut","ms","interval","gap","fading","setInterval","clearInterval","doc","documentElement","pageYOffset","clientTop","pageXOffset","scrollLeft","clientLeft","matches","p","Element","f","webkitMatchesSelector","s","indexOf","margin","marginLeft","marginRight","getHorizontalPadding","paddingLeft","paddingRight","getHorizontalMargin","innerWidth","getInnerHeight","paddingBottom","marginTop","marginBottom","getHeight","borderTopWidth","borderBottomWidth","getWidth","borderLeftWidth","borderRightWidth","win","d","e","g","getElementsByTagName","w","clientWidth","h","innerHeight","getOffset","rect","replaceElementWith","replacementElement","replaceChild","getUserAgent","navigator","userAgent","isIE","ua","msie","trident","rv","edge","isIOS","isAndroid","isTouchDevice","maxTouchPoints","isElement","nativeElement","removeChild","removeElement","obj","HTMLElement","nodeName","calculateScrollbarWidth","calculatedScrollbarWidth","scrollDiv","createElement","scrollbarWidth","calculateScrollbarHeight","calculatedScrollbarHeight","scrollbarHeight","invokeElementMethod","methodName","args","apply","clearSelection","getSelection","empty","removeAllRanges","rangeCount","getRangeAt","getClientRects","error","getBrowser","browser","matched","resolveUserAgent","version","toLowerCase","match","exec","isInteger","value","Number","isFinite","floor","isHidden","isVisible","isExist","focus","options","activeElement","getFocusableElements","focusableElements","visibleFocusableElements","focusableElement","generateZIndex","zindex","toString","createRange","text","getTargetElement","nextElementSibling","previousElementSibling","type","hasOwnProperty","undefined","isFunction","constructor","ConnectedOverlayScrollHandler","listener","bindScrollListener","addEventListener","unbindScrollListener","removeEventListener","destroy"],"sources":["C:/Users/samue/Documents/fullstackC/requerimento-app/node_modules/primeng/fesm2020/primeng-dom.mjs"],"sourcesContent":["/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n    static addClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.add(className);\n            else\n                element.className += ' ' + className;\n        }\n    }\n    static addMultipleClasses(element, className) {\n        if (element && className) {\n            if (element.classList) {\n                let styles = className.trim().split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.classList.add(styles[i]);\n                }\n            }\n            else {\n                let styles = className.split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.className += ' ' + styles[i];\n                }\n            }\n        }\n    }\n    static removeClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.remove(className);\n            else\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n    static hasClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                return element.classList.contains(className);\n            else\n                return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n        return false;\n    }\n    static siblings(element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    }\n    static find(element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    }\n    static findSingle(element, selector) {\n        if (element) {\n            return element.querySelector(selector);\n        }\n        return null;\n    }\n    static index(element) {\n        let children = element.parentNode.childNodes;\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static indexWithinGroup(element, attributeName) {\n        let children = element.parentNode ? element.parentNode.childNodes : [];\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static appendOverlay(overlay, target, appendTo = 'self') {\n        if (appendTo !== 'self' && overlay && target) {\n            this.appendChild(overlay, target);\n        }\n    }\n    static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n        if (overlay && target) {\n            calculateMinWidth && (overlay.style.minWidth || (overlay.style.minWidth = DomHandler.getOuterWidth(target) + 'px'));\n            if (appendTo === 'self') {\n                this.relativePosition(overlay, target);\n            }\n            else {\n                this.absolutePosition(overlay, target);\n            }\n        }\n    }\n    static relativePosition(element, target) {\n        const getClosestRelativeElement = (el) => {\n            if (!el)\n                return;\n            return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n        };\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        const relativeElement = getClosestRelativeElement(element);\n        const relativeElementOffset = relativeElement?.getBoundingClientRect() || { top: -1 * windowScrollTop, left: -1 * windowScrollLeft };\n        let top, left;\n        if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n            top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n            element.style.transformOrigin = 'bottom';\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight + targetOffset.top - relativeElementOffset.top;\n            element.style.transformOrigin = 'top';\n        }\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = (targetOffset.left - relativeElementOffset.left) * -1;\n        }\n        else if (targetOffset.left - relativeElementOffset.left + elementDimensions.width > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left - relativeElementOffset.left + elementDimensions.width - viewport.width) * -1;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = targetOffset.left - relativeElementOffset.left;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n    static absolutePosition(element, target) {\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const elementOuterHeight = elementDimensions.height;\n        const elementOuterWidth = elementDimensions.width;\n        const targetOuterHeight = target.offsetHeight;\n        const targetOuterWidth = target.offsetWidth;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        let top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            element.style.transformOrigin = 'bottom';\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n            element.style.transformOrigin = 'top';\n        }\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n    static getParents(element, parents = []) {\n        return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n    static getScrollableParents(element) {\n        let scrollableParents = [];\n        if (element) {\n            let parents = this.getParents(element);\n            const overflowRegex = /(auto|scroll)/;\n            const overflowCheck = (node) => {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            };\n            for (let parent of parents) {\n                let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n                if (scrollSelectors) {\n                    let selectors = scrollSelectors.split(',');\n                    for (let selector of selectors) {\n                        let el = this.findSingle(parent, selector);\n                        if (el && overflowCheck(el)) {\n                            scrollableParents.push(el);\n                        }\n                    }\n                }\n                if (parent.nodeType !== 9 && overflowCheck(parent)) {\n                    scrollableParents.push(parent);\n                }\n            }\n        }\n        return scrollableParents;\n    }\n    static getHiddenElementOuterHeight(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    }\n    static getHiddenElementOuterWidth(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    }\n    static getHiddenElementDimensions(element) {\n        let dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    }\n    static scrollInView(container, item) {\n        let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        let containerRect = container.getBoundingClientRect();\n        let itemRect = item.getBoundingClientRect();\n        let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        let scroll = container.scrollTop;\n        let elementHeight = container.clientHeight;\n        let itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if (offset + itemHeight > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    }\n    static fadeIn(element, duration) {\n        element.style.opacity = 0;\n        let last = +new Date();\n        let opacity = 0;\n        let tick = function () {\n            opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    }\n    static fadeOut(element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        let fading = setInterval(() => {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    }\n    static getWindowScrollTop() {\n        let doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n    static getWindowScrollLeft() {\n        let doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n    static matches(element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] ||\n            p.webkitMatchesSelector ||\n            p['mozMatchesSelector'] ||\n            p['msMatchesSelector'] ||\n            function (s) {\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n            };\n        return f.call(element, selector);\n    }\n    static getOuterWidth(el, margin) {\n        let width = el.offsetWidth;\n        if (margin) {\n            let style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    }\n    static getHorizontalPadding(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    static getHorizontalMargin(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    static innerWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static width(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static getInnerHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    }\n    static getOuterHeight(el, margin) {\n        let height = el.offsetHeight;\n        if (margin) {\n            let style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    }\n    static getHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    }\n    static getWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    }\n    static getViewport() {\n        let win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    }\n    static getOffset(el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n        };\n    }\n    static replaceElementWith(element, replacementElement) {\n        let parentNode = element.parentNode;\n        if (!parentNode)\n            throw `Can't replace element`;\n        return parentNode.replaceChild(replacementElement, element);\n    }\n    static getUserAgent() {\n        return navigator.userAgent;\n    }\n    static isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    }\n    static isIOS() {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n    static isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    static isTouchDevice() {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    static appendChild(element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    }\n    static removeChild(element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    }\n    static removeElement(element) {\n        if (!('remove' in Element.prototype))\n            element.parentNode.removeChild(element);\n        else\n            element.remove();\n    }\n    static isElement(obj) {\n        return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n    }\n    static calculateScrollbarWidth(el) {\n        if (el) {\n            let style = getComputedStyle(el);\n            return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            let scrollDiv = document.createElement('div');\n            scrollDiv.className = 'p-scrollbar-measure';\n            document.body.appendChild(scrollDiv);\n            let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    }\n    static calculateScrollbarHeight() {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.className = 'p-scrollbar-measure';\n        document.body.appendChild(scrollDiv);\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    }\n    static invokeElementMethod(element, methodName, args) {\n        element[methodName].apply(element, args);\n    }\n    static clearSelection() {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    }\n    static getBrowser() {\n        if (!this.browser) {\n            let matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    }\n    static resolveUserAgent() {\n        let ua = navigator.userAgent.toLowerCase();\n        let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) || [];\n        return {\n            browser: match[1] || '',\n            version: match[2] || '0'\n        };\n    }\n    static isInteger(value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n        }\n    }\n    static isHidden(element) {\n        return !element || element.offsetParent === null;\n    }\n    static isVisible(element) {\n        return element && element.offsetParent != null;\n    }\n    static isExist(element) {\n        return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n    }\n    static focus(element, options) {\n        element && document.activeElement !== element && element.focus(options);\n    }\n    static getFocusableElements(element) {\n        let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]):not(.p-disabled)`);\n        let visibleFocusableElements = [];\n        for (let focusableElement of focusableElements) {\n            if (getComputedStyle(focusableElement).display != 'none' && getComputedStyle(focusableElement).visibility != 'hidden')\n                visibleFocusableElements.push(focusableElement);\n        }\n        return visibleFocusableElements;\n    }\n    static generateZIndex() {\n        this.zindex = this.zindex || 999;\n        return ++this.zindex;\n    }\n    static getSelection() {\n        if (window.getSelection)\n            return window.getSelection().toString();\n        else if (document.getSelection)\n            return document.getSelection().toString();\n        else if (document['selection'])\n            return document['selection'].createRange().text;\n        return null;\n    }\n    static getTargetElement(target, el) {\n        if (!target)\n            return null;\n        switch (target) {\n            case 'document':\n                return document;\n            case 'window':\n                return window;\n            case '@next':\n                return el?.nextElementSibling;\n            case '@prev':\n                return el?.previousElementSibling;\n            case '@parent':\n                return el?.parentElement;\n            case '@grandparent':\n                return el?.parentElement.parentElement;\n            default:\n                const type = typeof target;\n                if (type === 'string') {\n                    return document.querySelector(target);\n                }\n                else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n                    return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n                }\n                const isFunction = (obj) => !!(obj && obj.constructor && obj.call && obj.apply);\n                const element = isFunction(target) ? target() : target;\n                return (element && element.nodeType === 9) || this.isExist(element) ? element : null;\n        }\n    }\n}\nDomHandler.zindex = 1000;\nDomHandler.calculatedScrollbarWidth = null;\nDomHandler.calculatedScrollbarHeight = null;\n\nclass ConnectedOverlayScrollHandler {\n    constructor(element, listener = () => { }) {\n        this.element = element;\n        this.listener = listener;\n    }\n    bindScrollListener() {\n        this.scrollableParents = DomHandler.getScrollableParents(this.element);\n        for (let i = 0; i < this.scrollableParents.length; i++) {\n            this.scrollableParents[i].addEventListener('scroll', this.listener);\n        }\n    }\n    unbindScrollListener() {\n        if (this.scrollableParents) {\n            for (let i = 0; i < this.scrollableParents.length; i++) {\n                this.scrollableParents[i].removeEventListener('scroll', this.listener);\n            }\n        }\n    }\n    destroy() {\n        this.unbindScrollListener();\n        this.element = null;\n        this.listener = null;\n        this.scrollableParents = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}