{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequerimentoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.URL_API}/requerimentos`;\n  }\n  listarTodos() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  listarPorId(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  gerarPdf(requerimento) {\n    return this.http.get(`${this.apiUrl}/${requerimento.id}/gerarpdf`, {\n      responseType: 'blob'\n    });\n  }\n  cadastrar(requerimento) {\n    return this.http.post(`${this.apiUrl}`, requerimento);\n  }\n  atualizar(requerimento) {\n    return this.http.put(`${this.apiUrl}`, requerimento);\n  }\n  download(id) {\n    return this.http.get(`${this.apiUrl}/download/${id}`, {\n      responseType: 'blob'\n    });\n  }\n  preview(requerimento) {\n    return this.http.post(`${this.apiUrl}/preview-pdf`, requerimento, {\n      responseType: 'blob'\n    });\n  }\n}\nRequerimentoService.ɵfac = function RequerimentoService_Factory(t) {\n  return new (t || RequerimentoService)(i0.ɵɵinject(i1.HttpClient));\n};\nRequerimentoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RequerimentoService,\n  factory: RequerimentoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,GAAGH,WAAW,CAACI,OAAO,gBAAgB;EAEhB;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,GAAG,IAAI,CAACC,MAAM,EAAE,CAAC;EACxD;EAEAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EAC5D;EAEAC,QAAQ,CAACC,YAA0B;IACjC,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAClB,GAAG,IAAI,CAACC,MAAM,IAAII,YAAY,CAACF,EAAE,WAAW,EAC5C;MACEG,YAAY,EAAE;KACf,CACF;EACH;EAEAC,SAAS,CAACF,YAA0B;IAClC,OAAO,IAAI,CAACR,IAAI,CAACW,IAAI,CAAe,GAAG,IAAI,CAACP,MAAM,EAAE,EAAEI,YAAY,CAAC;EACrE;EAEAI,SAAS,CAACJ,YAA0B;IAClC,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAe,GAAG,IAAI,CAACT,MAAM,EAAE,EAAEI,YAAY,CAAC;EACpE;EAEAM,QAAQ,CAACR,EAAU;IACjB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,aAAaE,EAAE,EAAE,EAAE;MACpDG,YAAY,EAAE;KACf,CAAC;EACJ;EAEAM,OAAO,CAACP,YAA0B;IAChC,OAAO,IAAI,CAACR,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,cAAc,EAAEI,YAAY,EAAE;MAChEC,YAAY,EAAE;KACf,CAAC;EACJ;;AAxCWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAkB,SAAnBlB,mBAAmB;EAAAmB,YAFlB;AAAM","names":["environment","RequerimentoService","constructor","http","URL_API","listarTodos","get","apiUrl","listarPorId","id","gerarPdf","requerimento","responseType","cadastrar","post","atualizar","put","download","preview","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\requerimento\\requerimento.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Requerimento } from '../shared/model/requerimento.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequerimentoService {\n  private apiUrl = `${environment.URL_API}/requerimentos`;\n\n  constructor(private http: HttpClient) {}\n\n  listarTodos(): Observable<Requerimento[]> {\n    return this.http.get<Requerimento[]>(`${this.apiUrl}`);\n  }\n\n  listarPorId(id: number): Observable<Requerimento> {\n    return this.http.get<Requerimento>(`${this.apiUrl}/${id}`);\n  }\n\n  gerarPdf(requerimento: Requerimento): Observable<any> {\n    return this.http.get<Requerimento>(\n      `${this.apiUrl}/${requerimento.id}/gerarpdf`,\n      {\n        responseType: 'blob' as 'json',\n      }\n    );\n  }\n\n  cadastrar(requerimento: Requerimento): Observable<Requerimento> {\n    return this.http.post<Requerimento>(`${this.apiUrl}`, requerimento);\n  }\n\n  atualizar(requerimento: Requerimento): Observable<Requerimento> {\n    return this.http.put<Requerimento>(`${this.apiUrl}`, requerimento);\n  }\n\n  download(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/download/${id}`, {\n      responseType: 'blob',\n    });\n  }\n\n  preview(requerimento: Requerimento): Observable<any> {\n    return this.http.post(`${this.apiUrl}/preview-pdf`, requerimento, {\n      responseType: 'blob' as 'json',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}