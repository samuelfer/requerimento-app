{"ast":null,"code":"import { TipoPessoa } from 'src/app/shared/model/tipo-pessoa.model';\nimport { TipoPessoaEnum } from './../../shared/enum/tipo-pessoa.enum';\nimport { Cargo } from './../../shared/model/cargo.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../servidores.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/mensagemService\";\nimport * as i4 from \"src/app/tipo-pessoa/tipo-pessoa.service\";\nimport * as i5 from \"./../../cargos/cargos.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/api\";\nimport * as i10 from \"primeng/inputtext\";\nimport * as i11 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    width: \"75%\"\n  };\n};\nfunction ServidoresFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 11)(3, \"label\");\n    i0.ɵɵtext(4, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function ServidoresFormComponent_div_21_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.pessoa.tipoPessoa.descricao = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 10)(8, \"div\", 11)(9, \"label\");\n    i0.ɵɵtext(10, \"Ativo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"p-dropdown\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function ServidoresFormComponent_div_21_Template_p_dropdown_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.pessoa.ativo = $event);\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c0));\n    i0.ɵɵproperty(\"disabled\", true)(\"ngModel\", ctx_r0.pessoa.tipoPessoa.descricao);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"options\", ctx_r0.opcoesStatus)(\"ngModel\", ctx_r0.pessoa.ativo);\n  }\n}\nfunction ServidoresFormComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ServidoresFormComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.cadastrar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ServidoresFormComponent_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ServidoresFormComponent_button_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.atualizar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return {\n    \"width\": \"75%\"\n  };\n};\nexport class ServidoresFormComponent {\n  constructor(servidoresService, router, mensagemService, activedRoute, tipoPessoaService, cargoService) {\n    this.servidoresService = servidoresService;\n    this.router = router;\n    this.mensagemService = mensagemService;\n    this.activedRoute = activedRoute;\n    this.tipoPessoaService = tipoPessoaService;\n    this.cargoService = cargoService;\n    this.pessoa = {\n      nome: '',\n      cargo: new Cargo(),\n      tipoPessoa: new TipoPessoa(),\n      ativo: true\n    };\n    this.opcoesStatus = [{\n      value: true,\n      descricao: 'Sim'\n    }, {\n      value: false,\n      descricao: 'Não'\n    }];\n    this.titulo = 'Cadastrar servidor';\n  }\n  ngOnInit() {\n    this.getTipoPessoas();\n    this.getCargos();\n    this.pessoaId = this.activedRoute.snapshot.paramMap.get('id');\n    if (this.pessoaId !== null) {\n      this.titulo = 'Editar servidor';\n      this.findById(+this.pessoaId);\n    }\n  }\n  cadastrar() {\n    if (this.validaCampos()) {\n      this.preencheTipoPessoa();\n      this.servidoresService.cadastrar(this.pessoa).subscribe(() => {\n        this.mensagemService.mensagemSucesso('Cadastro realizado com sucesso');\n        this.redirect();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar cadastrar');\n      });\n    }\n  }\n  atualizar() {\n    if (this.validaCampos()) {\n      this.preencheTipoPessoa();\n      this.servidoresService.atualizar(this.pessoa).subscribe(() => {\n        this.mensagemService.mensagemSucesso('Registro atualizado com sucesso');\n        this.redirect();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar atualizar');\n      });\n    }\n  }\n  redirect() {\n    this.router.navigate(['servidores']);\n  }\n  preencheTipoPessoa() {\n    const tipo = this.tipoPessoaList.find(tp => tp.id === TipoPessoaEnum.TIPO_SERVIDOR);\n    this.pessoa.tipoPessoa = tipo; //Exclamacao informa que tenho certeza que o valor nao eh nulo\n  }\n\n  validaCampos() {\n    if (this.pessoa.nome === null || this.pessoa.nome === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe o nome');\n      return false;\n    }\n    if (this.pessoa.cargo === null || this.pessoa.cargo.descricao === undefined) {\n      this.mensagemService.mensagemAlerta('Por favor, informe o cargo');\n      return false;\n    }\n    return true;\n  }\n  findById(requerimentoId) {\n    this.servidoresService.listarPorId(requerimentoId).subscribe(response => {\n      this.pessoa = response;\n    }, error => {\n      this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar listar');\n    });\n  }\n  getTipoPessoas() {\n    this.tipoPessoaService.listarTipoPessoas().subscribe(response => {\n      this.tipoPessoaList = response;\n    }, error => {\n      this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar listar');\n    });\n  }\n  getCargos() {\n    this.cargoService.listarTodos().subscribe(response => {\n      this.cargosList = response;\n    }, error => {\n      this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar listar');\n    });\n  }\n}\nServidoresFormComponent.ɵfac = function ServidoresFormComponent_Factory(t) {\n  return new (t || ServidoresFormComponent)(i0.ɵɵdirectiveInject(i1.ServidoresService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MensagemService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.TipoPessoaService), i0.ɵɵdirectiveInject(i5.CargosService));\n};\nServidoresFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServidoresFormComponent,\n  selectors: [[\"app-servidores-form\"]],\n  decls: 27,\n  vars: 14,\n  consts: [[1, \"content-wrapper\", \"mt-4\"], [1, \"content\"], [1, \"container-fluid\"], [1, \"card\", \"card-secondary\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-8\"], [\"name\", \"nome\", \"type\", \"text\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-4\"], [1, \"form-group\"], [\"name\", \"cargo\", \"optionLabel\", \"descricao\", \"placeholder\", \"Selecione\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"btn-right\", \"mt-4\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Salvar\", \"icon\", \"pi pi-save\", \"class\", \"p-button-success p-button-sm\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"../\", \"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancelar\", \"icon\", \"pi pi-angle-left\", 1, \"p-button-secondary\", \"p-button-sm\", \"ml-2\"], [\"name\", \"tipoPessoa\", \"type\", \"text\", \"pInputText\", \"\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"optionLabel\", \"descricao\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Salvar\", \"icon\", \"pi pi-save\", 1, \"p-button-success\", \"p-button-sm\", 3, \"click\"]],\n  template: function ServidoresFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\")(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"label\");\n      i0.ɵɵtext(12, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ServidoresFormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.pessoa.nome = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"div\", 11)(17, \"label\");\n      i0.ɵɵtext(18, \"Cargo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"p-dropdown\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function ServidoresFormComponent_Template_p_dropdown_ngModelChange_20_listener($event) {\n        return ctx.pessoa.cargo = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(21, ServidoresFormComponent_div_21_Template, 13, 7, \"div\", 13);\n      i0.ɵɵelementStart(22, \"p-footer\")(23, \"div\", 14);\n      i0.ɵɵtemplate(24, ServidoresFormComponent_button_24_Template, 1, 0, \"button\", 15);\n      i0.ɵɵtemplate(25, ServidoresFormComponent_button_25_Template, 1, 0, \"button\", 15);\n      i0.ɵɵelement(26, \"button\", 16);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(8);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c0));\n      i0.ɵɵproperty(\"ngModel\", ctx.pessoa.nome);\n      i0.ɵɵadvance(6);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c1));\n      i0.ɵɵproperty(\"options\", ctx.cargosList)(\"ngModel\", ctx.pessoa.cargo)(\"required\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.pessoa.id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.pessoa.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.pessoa.id);\n    }\n  },\n  dependencies: [i6.NgIf, i2.RouterLink, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.ButtonDirective, i9.Footer, i10.InputText, i11.Dropdown],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["TipoPessoa","TipoPessoaEnum","Cargo","i0","ServidoresFormComponent","constructor","servidoresService","router","mensagemService","activedRoute","tipoPessoaService","cargoService","nome","cargo","tipoPessoa","ativo","value","descricao","ngOnInit","getTipoPessoas","getCargos","pessoaId","snapshot","paramMap","get","titulo","findById","cadastrar","validaCampos","preencheTipoPessoa","pessoa","subscribe","mensagemSucesso","redirect","error","mensagemError","atualizar","navigate","tipo","tipoPessoaList","find","tp","id","TIPO_SERVIDOR","mensagemAlerta","undefined","requerimentoId","listarPorId","response","listarTipoPessoas","listarTodos","cargosList","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\servidores\\servidores-form\\servidores-form.component.ts","C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\servidores\\servidores-form\\servidores-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MensagemService } from 'src/app/service/mensagemService';\nimport { TipoPessoa } from 'src/app/shared/model/tipo-pessoa.model';\nimport { TipoPessoaService } from 'src/app/tipo-pessoa/tipo-pessoa.service';\n\nimport { CargosService } from './../../cargos/cargos.service';\nimport { TipoPessoaEnum } from './../../shared/enum/tipo-pessoa.enum';\nimport { Cargo } from './../../shared/model/cargo.model';\nimport { Servidor } from './../../shared/model/servidor.model';\nimport { ServidoresService } from './../servidores.service';\n\n@Component({\n  selector: 'app-servidores-form',\n  templateUrl: './servidores-form.component.html',\n  styleUrls: ['./servidores-form.component.scss'],\n})\nexport class ServidoresFormComponent implements OnInit {\n  pessoa: Servidor = {\n    nome: '',\n    cargo: new Cargo(),\n    tipoPessoa: new TipoPessoa(),\n    ativo: true,\n  };\n  pessoaId: string | null;\n  tipoPessoaList: TipoPessoa[];\n  cargosList: Cargo[];\n\n  opcoesStatus = [\n    { value: true, descricao: 'Sim' },\n    { value: false, descricao: 'Não' },\n  ];\n  titulo = 'Cadastrar servidor';\n\n  constructor(\n    private servidoresService: ServidoresService,\n    private router: Router,\n    private mensagemService: MensagemService,\n    private activedRoute: ActivatedRoute,\n    private tipoPessoaService: TipoPessoaService,\n    private cargoService: CargosService\n  ) {}\n\n  ngOnInit(): void {\n    this.getTipoPessoas();\n    this.getCargos();\n    this.pessoaId = this.activedRoute.snapshot.paramMap.get('id');\n    if (this.pessoaId !== null) {\n      this.titulo = 'Editar servidor';\n      this.findById(+this.pessoaId);\n    }\n  }\n\n  cadastrar(): void {\n    if (this.validaCampos()) {\n      this.preencheTipoPessoa();\n      this.servidoresService.cadastrar(this.pessoa).subscribe(\n        () => {\n          this.mensagemService.mensagemSucesso(\n            'Cadastro realizado com sucesso'\n          );\n          this.redirect();\n        },\n        (error) => {\n          this.mensagemService.mensagemError(\n            error,\n            'Ocorreu um erro! Erro ao tentar cadastrar'\n          );\n        }\n      );\n    }\n  }\n\n  atualizar(): void {\n    if (this.validaCampos()) {\n      this.preencheTipoPessoa();\n      this.servidoresService.atualizar(this.pessoa).subscribe(\n        () => {\n          this.mensagemService.mensagemSucesso(\n            'Registro atualizado com sucesso'\n          );\n          this.redirect();\n        },\n        (error) => {\n          this.mensagemService.mensagemError(\n            error,\n            'Ocorreu um erro! Erro ao tentar atualizar'\n          );\n        }\n      );\n    }\n  }\n\n  private redirect() {\n    this.router.navigate(['servidores']);\n  }\n\n  private preencheTipoPessoa(): void {\n    const tipo = this.tipoPessoaList.find(\n      (tp) => tp.id === TipoPessoaEnum.TIPO_SERVIDOR\n    );\n    this.pessoa.tipoPessoa = tipo!; //Exclamacao informa que tenho certeza que o valor nao eh nulo\n  }\n\n  private validaCampos(): boolean {\n    if (this.pessoa.nome === null || this.pessoa.nome === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe o nome');\n      return false;\n    }\n\n    if (\n      this.pessoa.cargo === null ||\n      this.pessoa.cargo.descricao === undefined\n    ) {\n      this.mensagemService.mensagemAlerta('Por favor, informe o cargo');\n      return false;\n    }\n    return true;\n  }\n\n  private findById(requerimentoId: number): void {\n    this.servidoresService.listarPorId(requerimentoId).subscribe(\n      (response) => {\n        this.pessoa = response;\n      },\n      (error) => {\n        this.mensagemService.mensagemError(\n          error,\n          'Ocorreu um erro! Erro ao tentar listar'\n        );\n      }\n    );\n  }\n\n  private getTipoPessoas(): void {\n    this.tipoPessoaService.listarTipoPessoas().subscribe(\n      (response) => {\n        this.tipoPessoaList = response;\n      },\n      (error) => {\n        this.mensagemService.mensagemError(\n          error,\n          'Ocorreu um erro! Erro ao tentar listar'\n        );\n      }\n    );\n  }\n\n  private getCargos(): void {\n    this.cargoService.listarTodos().subscribe(\n      (response) => {\n        this.cargosList = response;\n      },\n      (error) => {\n        this.mensagemService.mensagemError(\n          error,\n          'Ocorreu um erro! Erro ao tentar listar'\n        );\n      }\n    );\n  }\n}\n","<div class=\"content-wrapper mt-4\">\r\n  <section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n\r\n      <div class=\"card card-secondary\">\r\n        <div class=\"card-header\">\r\n          <h3 class=\"card-title\">{{ titulo }}</h3>\r\n\r\n        </div>\r\n        <form>\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-8\">\r\n                <label>Nome</label>\r\n                <br>\r\n                <input [(ngModel)]=\"pessoa.nome\" name=\"nome\" type=\"text\" pInputText [style]=\"{ width: '75%' }\">\r\n              </div>\r\n\r\n              <div class=\"col-md-4\">\r\n                <div class=\"form-group\">\r\n                  <label>Cargo</label>\r\n                  <br>\r\n                  <p-dropdown [options]=\"cargosList\" [(ngModel)]=\"pessoa.cargo\" name=\"cargo\" optionLabel=\"descricao\"\r\n                    placeholder=\"Selecione\" [required]=\"true\" [style]=\"{'width':'75%'}\">\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\" *ngIf=\"pessoa.id\">\r\n              <div class=\"col-md-8\">\r\n                <div class=\"form-group\">\r\n                  <label>Tipo</label>\r\n                  <br>\r\n                  <input [disabled]=\"true\" [(ngModel)]=\"pessoa.tipoPessoa.descricao\" name=\"tipoPessoa\" type=\"text\"\r\n                    pInputText [style]=\"{ width: '75%' }\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-4\">\r\n                <div class=\"form-group\">\r\n                  <label>Ativo</label>\r\n                  <br />\r\n                  <p-dropdown [options]=\"opcoesStatus\" [(ngModel)]=\"pessoa.ativo\" optionLabel=\"descricao\"></p-dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p-footer>\r\n              <div class=\"btn-right mt-4\">\r\n                <button (click)=\"cadastrar()\" pButton type=\"button\" label=\"Salvar\" icon=\"pi pi-save\"\r\n                  class=\"p-button-success p-button-sm\" *ngIf=\"!pessoa.id\"></button>\r\n                <button (click)=\"atualizar()\" pButton type=\"button\" label=\"Salvar\" icon=\"pi pi-save\"\r\n                  class=\"p-button-success p-button-sm\" *ngIf=\"pessoa.id\"></button>\r\n                <button routerLink=\"../\" pButton type=\"button\" label=\"Cancelar\" icon=\"pi pi-angle-left\"\r\n                  class=\"p-button-secondary p-button-sm ml-2\"></button>\r\n              </div>\r\n            </p-footer>\r\n            <!-- /.col -->\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <!-- /.card-body -->\r\n\r\n\r\n    </div>\r\n    <!-- /.card -->\r\n\r\n    <!-- /.container-fluid -->\r\n  </section>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}