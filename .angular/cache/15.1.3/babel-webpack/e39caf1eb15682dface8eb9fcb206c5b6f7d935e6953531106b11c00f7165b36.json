{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../usuarios.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/mensagemService\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/api\";\nimport * as i8 from \"primeng/inputtext\";\nimport * as i9 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    width: \"75%\"\n  };\n};\nfunction UsuariosFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"label\");\n    i0.ɵɵtext(2, \"Senha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function UsuariosFormComponent_div_21_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.pessoa.senha = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.pessoa.senha);\n  }\n}\nfunction UsuariosFormComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 20)(2, \"label\");\n    i0.ɵɵtext(3, \"Ativo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"p-dropdown\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function UsuariosFormComponent_div_22_Template_p_dropdown_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.pessoa.ativo = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"options\", ctx_r2.opcoesStatus)(\"ngModel\", ctx_r2.pessoa.ativo);\n  }\n}\nfunction UsuariosFormComponent_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function UsuariosFormComponent_button_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.cadastrar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UsuariosFormComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function UsuariosFormComponent_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.atualizar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UsuariosFormComponent {\n  constructor(usuarioService, router, mensagemService, activedRoute) {\n    this.usuarioService = usuarioService;\n    this.router = router;\n    this.mensagemService = mensagemService;\n    this.activedRoute = activedRoute;\n    this.pessoa = {\n      nome: '',\n      email: '',\n      ativo: true,\n      senha: ''\n    };\n    this.opcoesStatus = [{\n      value: true,\n      descricao: 'Sim'\n    }, {\n      value: false,\n      descricao: 'Não'\n    }];\n    this.titulo = 'Cadastrar usuário';\n  }\n  ngOnInit() {\n    this.pessoaId = this.activedRoute.snapshot.paramMap.get('id');\n    if (this.pessoaId !== null) {\n      this.titulo = 'Editar usuário';\n      this.findById(+this.pessoaId);\n    }\n  }\n  cadastrar() {\n    if (this.validaCampos()) {\n      this.usuarioService.cadastrar(this.pessoa).subscribe(() => {\n        this.mensagemService.mensagemSucesso('Cadastro realizado com sucesso');\n        this.redirect();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar cadastrar');\n      });\n    }\n  }\n  atualizar() {\n    if (this.validaCampos()) {\n      this.usuarioService.atualizar(this.pessoa).subscribe(() => {\n        this.mensagemService.mensagemSucesso('Registro atualizado com sucesso');\n        this.redirect();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar atualizar');\n      });\n    }\n  }\n  redirect() {\n    this.router.navigate(['usuarios']);\n  }\n  validaCampos() {\n    if (this.pessoa.nome === null || this.pessoa.nome === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe o nome');\n      return false;\n    }\n    if (this.pessoa.email === null || this.pessoa.email === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe o email');\n      return false;\n    }\n    if (this.pessoa.senha === null || this.pessoa.senha === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe a senha');\n      return false;\n    }\n    return true;\n  }\n  findById(requerimentoId) {\n    this.usuarioService.listarPorId(requerimentoId).subscribe(response => {\n      this.pessoa = response;\n    }, error => {\n      this.mensagemService.mensagemError(error, 'Ocorreu um erro ao tentar listar');\n    });\n  }\n}\nUsuariosFormComponent.ɵfac = function UsuariosFormComponent_Factory(t) {\n  return new (t || UsuariosFormComponent)(i0.ɵɵdirectiveInject(i1.UsuariosService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MensagemService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUsuariosFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsuariosFormComponent,\n  selectors: [[\"app-usuario-form\"]],\n  decls: 28,\n  vars: 13,\n  consts: [[1, \"content-wrapper\", \"mt-4\"], [1, \"content\"], [1, \"container-fluid\"], [1, \"card\", \"card-secondary\"], [1, \"card-header\"], [1, \"card-title\"], [\"vereadorForm\", \"ngForm\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-6\"], [\"name\", \"nome\", \"type\", \"text\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", \"type\", \"text\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"col-md-6 mt-3\", 4, \"ngIf\"], [\"class\", \"col-md-4\", 4, \"ngIf\"], [1, \"btn-right\", \"mt-4\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Salvar\", \"icon\", \"pi pi-save\", \"class\", \"p-button-success p-button-sm\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"../\", \"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancelar\", \"icon\", \"pi pi-angle-left\", 1, \"p-button-secondary\", \"p-button-sm\", \"ml-2\"], [1, \"col-md-6\", \"mt-3\"], [\"name\", \"senha\", \"type\", \"password\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-4\"], [1, \"form-group\"], [\"optionLabel\", \"descricao\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Salvar\", \"icon\", \"pi pi-save\", 1, \"p-button-success\", \"p-button-sm\", 3, \"click\"]],\n  template: function UsuariosFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\", null, 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\");\n      i0.ɵɵtext(13, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UsuariosFormComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.pessoa.nome = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\");\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function UsuariosFormComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.pessoa.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(21, UsuariosFormComponent_div_21_Template, 5, 4, \"div\", 12);\n      i0.ɵɵtemplate(22, UsuariosFormComponent_div_22_Template, 6, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"p-footer\")(24, \"div\", 14);\n      i0.ɵɵtemplate(25, UsuariosFormComponent_button_25_Template, 1, 0, \"button\", 15);\n      i0.ɵɵtemplate(26, UsuariosFormComponent_button_26_Template, 1, 0, \"button\", 15);\n      i0.ɵɵelement(27, \"button\", 16);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(9);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(11, _c0));\n      i0.ɵɵproperty(\"ngModel\", ctx.pessoa.nome);\n      i0.ɵɵadvance(5);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c0));\n      i0.ɵɵproperty(\"ngModel\", ctx.pessoa.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.pessoa.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.pessoa.id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.pessoa.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.pessoa.id);\n    }\n  },\n  dependencies: [i4.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i6.ButtonDirective, i7.Footer, i8.InputText, i9.Dropdown],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;IAsBcA,+BAA8C;IACrCA,qBAAK;IAAAA,iBAAQ;IACpBA,qBAAI;IACJA,iCAAqG;IAA9FA;MAAAA;MAAA;MAAA,OAAaA,4CAAoB;IAAA,EAAP;IAAjCA,iBAAqG;;;;IAA3BA,eAA0B;IAA1BA,yCAA0B;IAA7FA,6CAA0B;;;;;;IAEnCA,+BAAwC;IAE7BA,qBAAK;IAAAA,iBAAQ;IACpBA,qBAAM;IACNA,sCAAwF;IAAnDA;MAAAA;MAAA;MAAA,OAAaA,4CAAoB;IAAA,EAAP;IAAyBA,iBAAa;;;;IAAzFA,eAAwB;IAAxBA,6CAAwB;;;;;;IAMtCA,kCAC0D;IADlDA;MAAAA;MAAA;MAAA,OAASA,iCAAW;IAAA,EAAC;IAC6BA,iBAAS;;;;;;IACnEA,kCACyD;IADjDA;MAAAA;MAAA;MAAA,OAASA,kCAAW;IAAA,EAAC;IAC4BA,iBAAS;;;AC5BlF,OAAM,MAAOC,qBAAqB;EAehCC,YACUC,cAA+B,EAC/BC,MAAc,EACdC,eAAgC,EAChCC,YAA4B;IAH5B,mBAAc,GAAdH,cAAc;IACd,WAAM,GAANC,MAAM;IACN,oBAAe,GAAfC,eAAe;IACf,iBAAY,GAAZC,YAAY;IAlBtB,WAAM,GAAY;MAChBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE;KACR;IAGD,iBAAY,GAAG,CACb;MAAEC,KAAK,EAAE,IAAI;MAAEC,SAAS,EAAE;IAAK,CAAE,EACjC;MAAED,KAAK,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAE,CACnC;IACD,WAAM,GAAG,mBAAmB;EAOzB;EAEHC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACR,YAAY,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAC7D,IAAI,IAAI,CAACH,QAAQ,KAAK,IAAI,EAAE;MAC1B,IAAI,CAACI,MAAM,GAAG,gBAAgB;MAC9B,IAAI,CAACC,QAAQ,CAAC,CAAC,IAAI,CAACL,QAAQ,CAAC;;EAEjC;EAEAM,SAAS;IACP,IAAI,IAAI,CAACC,YAAY,EAAE,EAAE;MACvB,IAAI,CAAClB,cAAc,CAACiB,SAAS,CAAC,IAAI,CAACE,MAAM,CAAC,CAACC,SAAS,CAClD,MAAK;QACH,IAAI,CAAClB,eAAe,CAACmB,eAAe,CAClC,gCAAgC,CACjC;QACD,IAAI,CAACC,QAAQ,EAAE;MACjB,CAAC,EACAC,KAAK,IAAI;QACR,IAAI,CAACrB,eAAe,CAACsB,aAAa,CAChCD,KAAK,EACL,2CAA2C,CAC5C;MACH,CAAC,CACF;;EAEL;EAEAE,SAAS;IACP,IAAI,IAAI,CAACP,YAAY,EAAE,EAAE;MACvB,IAAI,CAAClB,cAAc,CAACyB,SAAS,CAAC,IAAI,CAACN,MAAM,CAAC,CAACC,SAAS,CAClD,MAAK;QACH,IAAI,CAAClB,eAAe,CAACmB,eAAe,CAClC,iCAAiC,CAClC;QACD,IAAI,CAACC,QAAQ,EAAE;MACjB,CAAC,EACAC,KAAK,IAAI;QACR,IAAI,CAACrB,eAAe,CAACsB,aAAa,CAChCD,KAAK,EACL,2CAA2C,CAC5C;MACH,CAAC,CACF;;EAEL;EAEQD,QAAQ;IACd,IAAI,CAACrB,MAAM,CAACyB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;EAEQR,YAAY;IAClB,IAAI,IAAI,CAACC,MAAM,CAACf,IAAI,KAAK,IAAI,IAAI,IAAI,CAACe,MAAM,CAACf,IAAI,KAAK,EAAE,EAAE;MACxD,IAAI,CAACF,eAAe,CAACyB,cAAc,CAAC,2BAA2B,CAAC;MAChE,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACR,MAAM,CAACd,KAAK,KAAK,IAAI,IAAI,IAAI,CAACc,MAAM,CAACd,KAAK,KAAK,EAAE,EAAE;MAC1D,IAAI,CAACH,eAAe,CAACyB,cAAc,CAAC,4BAA4B,CAAC;MACjE,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACR,MAAM,CAACZ,KAAK,KAAK,IAAI,IAAI,IAAI,CAACY,MAAM,CAACZ,KAAK,KAAK,EAAE,EAAE;MAC1D,IAAI,CAACL,eAAe,CAACyB,cAAc,CAAC,4BAA4B,CAAC;MACjE,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAEQX,QAAQ,CAACY,cAAsB;IACrC,IAAI,CAAC5B,cAAc,CAAC6B,WAAW,CAACD,cAAc,CAAC,CAACR,SAAS,CACtDU,QAAQ,IAAI;MACX,IAAI,CAACX,MAAM,GAAGW,QAAQ;IACxB,CAAC,EACAP,KAAK,IAAI;MACR,IAAI,CAACrB,eAAe,CAACsB,aAAa,CAChCD,KAAK,EACL,kCAAkC,CACnC;IACH,CAAC,CACF;EACH;;AApGWzB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZlCtC,8BAAkC;MAMDA,YAAY;MAAAA,iBAAK;MAG1CA,qCAA6B;MAIdA,qBAAI;MAAAA,iBAAQ;MACnBA,sBAAI;MACJA,kCAA+F;MAAxFA;QAAA;MAAA,EAAyB;MAAhCA,iBAA+F;MAEjGA,+BAAsB;MACbA,sBAAK;MAAAA,iBAAQ;MACpBA,sBAAI;MACJA,kCAAiG;MAA1FA;QAAA;MAAA,EAA0B;MAAjCA,iBAAiG;MAEnGA,yEAIM;MACNA,yEAMM;MACRA,iBAAM;MACNA,iCAAU;MAENA,+EACmE;MACnEA,+EACkE;MAClEA,8BACuD;MACzDA,iBAAM;;;MArCaA,eAAY;MAAZA,gCAAY;MASuCA,eAA0B;MAA1BA,0CAA0B;MAAvFA,yCAAyB;MAKsCA,eAA0B;MAA1BA,0CAA0B;MAAzFA,0CAA0B;MAEPA,eAAgB;MAAhBA,qCAAgB;MAKrBA,eAAe;MAAfA,oCAAe;MAWIA,eAAgB;MAAhBA,qCAAgB;MAEhBA,eAAe;MAAfA,oCAAe","names":["i0","UsuariosFormComponent","constructor","usuarioService","router","mensagemService","activedRoute","nome","email","ativo","senha","value","descricao","ngOnInit","pessoaId","snapshot","paramMap","get","titulo","findById","cadastrar","validaCampos","pessoa","subscribe","mensagemSucesso","redirect","error","mensagemError","atualizar","navigate","mensagemAlerta","requerimentoId","listarPorId","response","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\usuarios\\usuarios-form\\usuarios-form.component.html","C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\usuarios\\usuarios-form\\usuarios-form.component.ts"],"sourcesContent":["<div class=\"content-wrapper mt-4\">\n  <section class=\"content\">\n    <div class=\"container-fluid\">\n\n      <div class=\"card card-secondary\">\n        <div class=\"card-header\">\n          <h3 class=\"card-title\">{{ titulo }}</h3>\n\n        </div>\n        <form #vereadorForm=\"ngForm\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <label>Nome</label>\n                <br>\n                <input [(ngModel)]=\"pessoa.nome\" name=\"nome\" type=\"text\" pInputText [style]=\"{ width: '75%' }\">\n              </div>\n              <div class=\"col-md-6\">\n                <label>Email</label>\n                <br>\n                <input [(ngModel)]=\"pessoa.email\" name=\"email\" type=\"text\" pInputText [style]=\"{ width: '75%' }\">\n              </div>\n              <div class=\"col-md-6 mt-3\" *ngIf=\"!pessoa.id\">\n                <label>Senha</label>\n                <br>\n                <input [(ngModel)]=\"pessoa.senha\" name=\"senha\" type=\"password\" pInputText [style]=\"{ width: '75%' }\">\n              </div>\n              <div class=\"col-md-4\" *ngIf=\"pessoa.id\">\n                <div class=\"form-group\">\n                  <label>Ativo</label>\n                  <br />\n                  <p-dropdown [options]=\"opcoesStatus\" [(ngModel)]=\"pessoa.ativo\" optionLabel=\"descricao\"></p-dropdown>\n                </div>\n              </div>\n            </div>\n            <p-footer>\n              <div class=\"btn-right mt-4\">\n                <button (click)=\"cadastrar()\" pButton type=\"button\" label=\"Salvar\" icon=\"pi pi-save\"\n                  class=\"p-button-success p-button-sm\" *ngIf=\"!pessoa.id\"></button>\n                <button (click)=\"atualizar()\" pButton type=\"button\" label=\"Salvar\" icon=\"pi pi-save\"\n                  class=\"p-button-success p-button-sm\" *ngIf=\"pessoa.id\"></button>\n                <button routerLink=\"../\" pButton type=\"button\" label=\"Cancelar\" icon=\"pi pi-angle-left\"\n                  class=\"p-button-secondary p-button-sm ml-2\"></button>\n              </div>\n            </p-footer>\n            <!-- /.col -->\n          </div>\n        </form>\n      </div>\n      <!-- /.card-body -->\n\n\n    </div>\n    <!-- /.card -->\n\n    <!-- /.container-fluid -->\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MensagemService } from 'src/app/service/mensagemService';\nimport { Usuario } from 'src/app/shared/model/usuario.mode';\n\nimport { UsuariosService } from './../usuarios.service';\n\n@Component({\n  selector: 'app-usuario-form',\n  templateUrl: './usuarios-form.component.html',\n  styleUrls: ['./usuarios-form.component.scss'],\n})\nexport class UsuariosFormComponent implements OnInit {\n  pessoa: Usuario = {\n    nome: '',\n    email: '',\n    ativo: true,\n    senha: '',\n  };\n  pessoaId: string | null;\n\n  opcoesStatus = [\n    { value: true, descricao: 'Sim' },\n    { value: false, descricao: 'Não' },\n  ];\n  titulo = 'Cadastrar usuário';\n\n  constructor(\n    private usuarioService: UsuariosService,\n    private router: Router,\n    private mensagemService: MensagemService,\n    private activedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.pessoaId = this.activedRoute.snapshot.paramMap.get('id');\n    if (this.pessoaId !== null) {\n      this.titulo = 'Editar usuário';\n      this.findById(+this.pessoaId);\n    }\n  }\n\n  cadastrar(): void {\n    if (this.validaCampos()) {\n      this.usuarioService.cadastrar(this.pessoa).subscribe(\n        () => {\n          this.mensagemService.mensagemSucesso(\n            'Cadastro realizado com sucesso'\n          );\n          this.redirect();\n        },\n        (error) => {\n          this.mensagemService.mensagemError(\n            error,\n            'Ocorreu um erro! Erro ao tentar cadastrar'\n          );\n        }\n      );\n    }\n  }\n\n  atualizar(): void {\n    if (this.validaCampos()) {\n      this.usuarioService.atualizar(this.pessoa).subscribe(\n        () => {\n          this.mensagemService.mensagemSucesso(\n            'Registro atualizado com sucesso'\n          );\n          this.redirect();\n        },\n        (error) => {\n          this.mensagemService.mensagemError(\n            error,\n            'Ocorreu um erro! Erro ao tentar atualizar'\n          );\n        }\n      );\n    }\n  }\n\n  private redirect() {\n    this.router.navigate(['usuarios']);\n  }\n\n  private validaCampos(): boolean {\n    if (this.pessoa.nome === null || this.pessoa.nome === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe o nome');\n      return false;\n    }\n    if (this.pessoa.email === null || this.pessoa.email === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe o email');\n      return false;\n    }\n    if (this.pessoa.senha === null || this.pessoa.senha === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe a senha');\n      return false;\n    }\n    return true;\n  }\n\n  private findById(requerimentoId: number): void {\n    this.usuarioService.listarPorId(requerimentoId).subscribe(\n      (response) => {\n        this.pessoa = response;\n      },\n      (error) => {\n        this.mensagemService.mensagemError(\n          error,\n          'Ocorreu um erro ao tentar listar'\n        );\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}