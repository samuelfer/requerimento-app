{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../oficio/oficio.service\";\nimport * as i2 from \"./mensagemService\";\nexport class FileService {\n  constructor(oficioService, mensagemService) {\n    this.oficioService = oficioService;\n    this.mensagemService = mensagemService;\n    this.blobToFile = (blob, fileName) => {\n      const b = blob;\n      b.lastModifiedDate = new Date();\n      b.name = fileName;\n      return b;\n    };\n  }\n  abrir(arquivo) {\n    if (arquivo != null) {\n      this.oficioService.download(1).subscribe(data => {\n        const file = this.blobToFile(data, 'teste');\n        const url = window.URL.createObjectURL(file);\n        window.open(url);\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro ao tentar abrir o arquivo');\n      });\n    } else {\n      this.mensagemService.mensagemAlerta('Não há arquivo no registro selecionado.');\n    }\n  }\n  download(arquivo) {\n    if (arquivo != null) {\n      this.oficioService.download(1).subscribe(data => {\n        const objUrl = window.URL.createObjectURL(data);\n        const a = document.createElement('a');\n        a.href = objUrl;\n        a.download = 'testeDow';\n        window.document.body.appendChild(a);\n        a.click();\n        a.remove();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro ao tentar fazer o download do arquivo');\n      });\n    } else {\n      this.mensagemService.mensagemAlerta('Não há arquivo no registro selecionado.');\n    }\n  }\n}\nFileService.ɵfac = function FileService_Factory(t) {\n  return new (t || FileService)(i0.ɵɵinject(i1.OficioService), i0.ɵɵinject(i2.MensagemService));\n};\nFileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FileService,\n  factory: FileService.ɵfac\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,WAAW;EACtBC,YACUC,aAA4B,EAC5BC,eAAgC;IADhC,kBAAa,GAAbD,aAAa;IACb,oBAAe,GAAfC,eAAe;IAmDlB,eAAU,GAAG,CAACC,IAAU,EAAEC,QAAgB,KAAU;MACzD,MAAMC,CAAC,GAAQF,IAAI;MACnBE,CAAC,CAACC,gBAAgB,GAAG,IAAIC,IAAI,EAAE;MAC/BF,CAAC,CAACG,IAAI,GAAGJ,QAAQ;MACjB,OAAaC,CAAC;IAChB,CAAC;EAvDE;EAEII,KAAK,CAACC,OAAe;IAC1B,IAAIA,OAAO,IAAI,IAAI,EAAE;MACnB,IAAI,CAACT,aAAa,CAACU,QAAQ,CAAC,CAAC,CAAC,CAACC,SAAS,CACrCC,IAAI,IAAI;QACP,MAAMC,IAAI,GAAG,IAAI,CAACC,UAAU,CAACF,IAAI,EAAE,OAAO,CAAC;QAC3C,MAAMG,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QAC5CG,MAAM,CAACG,IAAI,CAACJ,GAAG,CAAC;MAClB,CAAC,EACAK,KAAK,IAAI;QACR,IAAI,CAACnB,eAAe,CAACoB,aAAa,CAChCD,KAAK,EACL,2CAA2C,CAC5C;MACH,CAAC,CACF;KACF,MAAM;MACL,IAAI,CAACnB,eAAe,CAACqB,cAAc,CACjC,yCAAyC,CAC1C;;EAEL;EAEOZ,QAAQ,CAACD,OAAe;IAC7B,IAAIA,OAAO,IAAI,IAAI,EAAE;MACnB,IAAI,CAACT,aAAa,CAACU,QAAQ,CAAC,CAAC,CAAC,CAACC,SAAS,CACrCC,IAAI,IAAI;QACP,MAAMW,MAAM,GAAGP,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;QAC/C,MAAMY,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACrCF,CAAC,CAACG,IAAI,GAAGJ,MAAM;QACfC,CAAC,CAACd,QAAQ,GAAG,UAAU;QACvBM,MAAM,CAACS,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,CAAC,CAAC;QACnCA,CAAC,CAACM,KAAK,EAAE;QACTN,CAAC,CAACO,MAAM,EAAE;MACZ,CAAC,EACAX,KAAK,IAAI;QACR,IAAI,CAACnB,eAAe,CAACoB,aAAa,CAChCD,KAAK,EACL,uDAAuD,CACxD;MACH,CAAC,CACF;KACF,MAAM;MACL,IAAI,CAACnB,eAAe,CAACqB,cAAc,CACjC,yCAAyC,CAC1C;;EAEL;;AApDWxB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkC,SAAXlC,WAAW;AAAA","names":["FileService","constructor","oficioService","mensagemService","blob","fileName","b","lastModifiedDate","Date","name","abrir","arquivo","download","subscribe","data","file","blobToFile","url","window","URL","createObjectURL","open","error","mensagemError","mensagemAlerta","objUrl","a","document","createElement","href","body","appendChild","click","remove","factory"],"sourceRoot":"","sources":["C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\service\\file.service.ts"],"sourcesContent":["import { OficioService } from './../oficio/oficio.service';\r\nimport { Oficio } from 'src/app/shared/model/oficio.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { MensagemService } from './mensagemService';\r\n\r\n@Injectable()\r\nexport class FileService {\r\n  constructor(\r\n    private oficioService: OficioService,\r\n    private mensagemService: MensagemService\r\n  ) {}\r\n\r\n  public abrir(arquivo: Oficio) {\r\n    if (arquivo != null) {\r\n      this.oficioService.download(1).subscribe(\r\n        (data) => {\r\n          const file = this.blobToFile(data, 'teste');\r\n          const url = window.URL.createObjectURL(file);\r\n          window.open(url);\r\n        },\r\n        (error) => {\r\n          this.mensagemService.mensagemError(\r\n            error,\r\n            'Ocorreu um erro ao tentar abrir o arquivo'\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      this.mensagemService.mensagemAlerta(\r\n        'Não há arquivo no registro selecionado.'\r\n      );\r\n    }\r\n  }\r\n\r\n  public download(arquivo: Oficio) {\r\n    if (arquivo != null) {\r\n      this.oficioService.download(1).subscribe(\r\n        (data) => {\r\n          const objUrl = window.URL.createObjectURL(data);\r\n          const a = document.createElement('a');\r\n          a.href = objUrl;\r\n          a.download = 'testeDow';\r\n          window.document.body.appendChild(a);\r\n          a.click();\r\n          a.remove();\r\n        },\r\n        (error) => {\r\n          this.mensagemService.mensagemError(\r\n            error,\r\n            'Ocorreu um erro ao tentar fazer o download do arquivo'\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      this.mensagemService.mensagemAlerta(\r\n        'Não há arquivo no registro selecionado.'\r\n      );\r\n    }\r\n  }\r\n\r\n  public blobToFile = (blob: Blob, fileName: string): File => {\r\n    const b: any = blob;\r\n    b.lastModifiedDate = new Date();\r\n    b.name = fileName;\r\n    return <File>b;\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}