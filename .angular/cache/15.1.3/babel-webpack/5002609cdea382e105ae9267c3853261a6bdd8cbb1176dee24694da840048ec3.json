{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../cargos.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/mensagemService\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/api\";\nimport * as i8 from \"primeng/inputtext\";\nfunction CargosFormComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function CargosFormComponent_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.cadastrar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargosFormComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function CargosFormComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.atualizar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"75%\"\n  };\n};\nexport class CargosFormComponent {\n  constructor(cargoService, router, mensagemService, activedRoute) {\n    this.cargoService = cargoService;\n    this.router = router;\n    this.mensagemService = mensagemService;\n    this.activedRoute = activedRoute;\n    this.cargo = {\n      descricao: '',\n      ativo: true\n    };\n    this.titulo = 'Cadastrar cargo';\n  }\n  ngOnInit() {\n    this.cargoId = this.activedRoute.snapshot.paramMap.get('id');\n    if (this.cargoId !== null) {\n      this.titulo = 'Editar cargo';\n      this.findById(+this.cargoId);\n    }\n  }\n  cadastrar() {\n    if (this.validaCampos()) {\n      this.cargoService.cadastrar(this.cargo).subscribe(() => {\n        this.mensagemService.mensagemSucesso('Cadastro realizado com sucesso');\n        this.redirect();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar cadastrar');\n      });\n    }\n  }\n  atualizar() {\n    if (this.validaCampos()) {\n      this.cargoService.atualizar(this.cargo).subscribe(() => {\n        this.mensagemService.mensagemSucesso('Registro atualizado com sucesso');\n        this.redirect();\n      }, error => {\n        this.mensagemService.mensagemError(error, 'Ocorreu um erro! Erro ao tentar atualizar');\n      });\n    }\n  }\n  redirect() {\n    this.router.navigate(['cargos']);\n  }\n  validaCampos() {\n    if (this.cargo.descricao === null || this.cargo.descricao === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe a descrição');\n      return false;\n    }\n    return true;\n  }\n  findById(requerimentoId) {\n    this.cargoService.listarPorId(requerimentoId).subscribe(response => {\n      this.cargo = response;\n    }, error => {\n      this.mensagemService.mensagemError(error, 'Ocorreu um erro ao tentar listar');\n    });\n  }\n}\nCargosFormComponent.ɵfac = function CargosFormComponent_Factory(t) {\n  return new (t || CargosFormComponent)(i0.ɵɵdirectiveInject(i1.CargosService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MensagemService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nCargosFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CargosFormComponent,\n  selectors: [[\"app-cargos-form\"]],\n  decls: 21,\n  vars: 7,\n  consts: [[1, \"content-wrapper\", \"mt-4\"], [1, \"content\"], [1, \"container-fluid\"], [1, \"card\", \"card-secondary\"], [1, \"card-header\"], [1, \"card-title\"], [\"cargoForm\", \"ngForm\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-8\"], [\"name\", \"descricao\", \"type\", \"text\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn-right\", \"mt-4\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Salvar\", \"icon\", \"pi pi-save\", \"class\", \"p-button-success p-button-sm\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"../\", \"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancelar\", \"icon\", \"pi pi-angle-left\", 1, \"p-button-secondary\", \"p-button-sm\", \"ml-2\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Salvar\", \"icon\", \"pi pi-save\", 1, \"p-button-success\", \"p-button-sm\", 3, \"click\"]],\n  template: function CargosFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\", null, 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\");\n      i0.ɵɵtext(13, \"Descri\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CargosFormComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.cargo.descricao = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"p-footer\")(17, \"div\", 11);\n      i0.ɵɵtemplate(18, CargosFormComponent_button_18_Template, 1, 0, \"button\", 12);\n      i0.ɵɵtemplate(19, CargosFormComponent_button_19_Template, 1, 0, \"button\", 12);\n      i0.ɵɵelement(20, \"button\", 13);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(9);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵproperty(\"ngModel\", ctx.cargo.descricao);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cargo.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cargo.id);\n    }\n  },\n  dependencies: [i4.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i6.ButtonDirective, i7.Footer, i8.InputText],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CargosFormComponent","constructor","cargoService","router","mensagemService","activedRoute","descricao","ativo","ngOnInit","cargoId","snapshot","paramMap","get","titulo","findById","cadastrar","validaCampos","cargo","subscribe","mensagemSucesso","redirect","error","mensagemError","atualizar","navigate","mensagemAlerta","requerimentoId","listarPorId","response","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\cargos\\cargos-form\\cargos-form.component.html","C:\\Users\\samue\\Documents\\fullstackC\\requerimento-app\\src\\app\\cargos\\cargos-form\\cargos-form.component.ts"],"sourcesContent":["<div class=\"content-wrapper mt-4\">\n  <section class=\"content\">\n    <div class=\"container-fluid\">\n\n      <div class=\"card card-secondary\">\n        <div class=\"card-header\">\n          <h3 class=\"card-title\">{{ titulo }}</h3>\n\n        </div>\n        <form #cargoForm=\"ngForm\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-8\">\n                <label>Descrição</label>\n                <br>\n                <input [(ngModel)]=\"cargo.descricao\" name=\"descricao\" type=\"text\" pInputText [style]=\"{ width: '75%' }\">\n              </div>\n            </div>\n            <p-footer>\n              <div class=\"btn-right mt-4\">\n                <button (click)=\"cadastrar()\" pButton type=\"button\" label=\"Salvar\" icon=\"pi pi-save\"\n                  class=\"p-button-success p-button-sm\" *ngIf=\"!cargo.id\"></button>\n                <button (click)=\"atualizar()\" pButton type=\"button\" label=\"Salvar\" icon=\"pi pi-save\"\n                  class=\"p-button-success p-button-sm\" *ngIf=\"cargo.id\"></button>\n                <button routerLink=\"../\" pButton type=\"button\" label=\"Cancelar\" icon=\"pi pi-angle-left\"\n                  class=\"p-button-secondary p-button-sm ml-2\"></button>\n              </div>\n            </p-footer>\n            <!-- /.col -->\n          </div>\n        </form>\n      </div>\n      <!-- /.card-body -->\n\n\n    </div>\n    <!-- /.card -->\n\n    <!-- /.container-fluid -->\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MensagemService } from 'src/app/service/mensagemService';\n\nimport { Cargo } from '../../shared/model/cargo.model';\nimport { CargosService } from './../cargos.service';\n\n@Component({\n  selector: 'app-cargos-form',\n  templateUrl: './cargos-form.component.html',\n  styleUrls: ['./cargos-form.component.scss'],\n})\nexport class CargosFormComponent implements OnInit {\n  cargo: Cargo = {\n    descricao: '',\n    ativo: true,\n  };\n  cargoId: string | null;\n  titulo = 'Cadastrar cargo';\n\n  constructor(\n    private cargoService: CargosService,\n    private router: Router,\n    private mensagemService: MensagemService,\n    private activedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.cargoId = this.activedRoute.snapshot.paramMap.get('id');\n    if (this.cargoId !== null) {\n      this.titulo = 'Editar cargo';\n      this.findById(+this.cargoId);\n    }\n  }\n  cadastrar(): void {\n    if (this.validaCampos()) {\n      this.cargoService.cadastrar(this.cargo).subscribe(\n        () => {\n          this.mensagemService.mensagemSucesso(\n            'Cadastro realizado com sucesso'\n          );\n          this.redirect();\n        },\n        (error) => {\n          this.mensagemService.mensagemError(\n            error,\n            'Ocorreu um erro! Erro ao tentar cadastrar'\n          );\n        }\n      );\n    }\n  }\n\n  atualizar(): void {\n    if (this.validaCampos()) {\n      this.cargoService.atualizar(this.cargo).subscribe(\n        () => {\n          this.mensagemService.mensagemSucesso(\n            'Registro atualizado com sucesso'\n          );\n          this.redirect();\n        },\n        (error) => {\n          this.mensagemService.mensagemError(\n            error,\n            'Ocorreu um erro! Erro ao tentar atualizar'\n          );\n        }\n      );\n    }\n  }\n\n  private redirect() {\n    this.router.navigate(['cargos']);\n  }\n\n  private validaCampos(): boolean {\n    if (this.cargo.descricao === null || this.cargo.descricao === '') {\n      this.mensagemService.mensagemAlerta('Por favor, informe a descrição');\n      return false;\n    }\n    return true;\n  }\n\n  private findById(requerimentoId: number): void {\n    this.cargoService.listarPorId(requerimentoId).subscribe(\n      (response) => {\n        this.cargo = response;\n      },\n      (error) => {\n        this.mensagemService.mensagemError(\n          error,\n          'Ocorreu um erro ao tentar listar'\n        );\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}